"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1157],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||s;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},703:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:5,sidebar_label:"Volume"},a="Volume",i={unversionedId:"concepts/volume",id:"concepts/volume",title:"Volume",description:"On-disk files in a container are ephemeral, which presents some problems for non-trivial applications when running in containers.",source:"@site/docs/04.concepts/04.volume.md",sourceDirName:"04.concepts",slug:"/concepts/volume",permalink:"/docs/concepts/volume",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/04.concepts/04.volume.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Volume"},sidebar:"tutorialSidebar",previous:{title:"CRD and CR",permalink:"/docs/concepts/crd"},next:{title:"LVM",permalink:"/docs/concepts/lvm"}},l={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"volume"},"Volume"),(0,o.kt)("p",null,"On-disk files in a container are ephemeral, which presents some problems for non-trivial applications when running in containers. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"One problem is the loss of files when a container crashes. The kubelet restarts the container but with a clean state. "),(0,o.kt)("li",{parentName:"ul"},"A second problem occurs when sharing files between containers running together in a ",(0,o.kt)("inlineCode",{parentName:"li"},"Pod"),". ")),(0,o.kt)("p",null,"The Kubernetes volume abstraction solves both of these problems."),(0,o.kt)("p",null,"Kubernetes supports many types of volumes. A Pod can use any number of volume types simultaneously. Ephemeral volume types have a lifetime of a pod, but persistent volumes exist beyond the lifetime of a pod. When a pod ceases to exist, Kubernetes destroys ephemeral volumes; however, Kubernetes does not destroy persistent volumes. For any kind of volume in a given pod, data is preserved across container restarts."),(0,o.kt)("p",null,"At its core, a volume is a directory, possibly with some data in it, which is accessible to the containers in a pod. How that directory comes to be, the medium that backs it, and the contents of it are determined by the particular volume type used."),(0,o.kt)("p",null,"To use a volume, specify the volumes to provide for the Pod in ",(0,o.kt)("inlineCode",{parentName:"p"},".spec.volumes")," and declare where to mount those volumes into containers in ",(0,o.kt)("inlineCode",{parentName:"p"},".spec.containers[*].volumeMounts"),"."),(0,o.kt)("p",null,"See also the official documentation provided by Kubernetes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/zh/docs/concepts/storage/volumes/"},"Volume")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/zh/docs/concepts/storage/persistent-volumes/"},"Persistent Volume")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/zh/docs/concepts/storage/ephemeral-volumes/"},"Ephemeral Volume"))))}u.isMDXComponent=!0}}]);