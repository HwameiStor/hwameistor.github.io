"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[879],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),i=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=i(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),u=i(n),k=r,m=u["".concat(l,".").concat(k)]||u[k]||p[k]||a;return n?o.createElement(m,s(s({ref:t},c),{},{components:n})):o.createElement(m,s({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:r,s[1]=d;for(var i=2;i<a;i++)s[i]=n[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>i});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1,sidebar_label:"LVM Storage Node"},s="LVM Storage Node",d={unversionedId:"nodes_and_disks/lvm_nodes",id:"nodes_and_disks/lvm_nodes",title:"LVM Storage Node",description:"LVM storage nodes pool the disks on the node and provide LVM-type data volumes for applications.",source:"@site/docs/nodes_and_disks/lvm_nodes.md",sourceDirName:"nodes_and_disks",slug:"/nodes_and_disks/lvm_nodes",permalink:"/docs/nodes_and_disks/lvm_nodes",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/edit/main/docs/docs/nodes_and_disks/lvm_nodes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"LVM Storage Node"},sidebar:"tutorialSidebar",previous:{title:"Nodes and Disks",permalink:"/docs/category/nodes-and-disks"},next:{title:"Node Expansion",permalink:"/docs/nodes_and_disks/node_expansion"}},l={},i=[{value:"Steps",id:"steps",level:2},{value:"1. Prepare a storage node",id:"1-prepare-a-storage-node",level:3},{value:"2. Add the storage node into HwameiStor",id:"2-add-the-storage-node-into-hwameistor",level:3},{value:"3. Post check",id:"3-post-check",level:3}],c={toc:i};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lvm-storage-node"},"LVM Storage Node"),(0,r.kt)("p",null,"LVM storage nodes pool the disks on the node and provide LVM-type data volumes for applications."),(0,r.kt)("h2",{id:"steps"},"Steps"),(0,r.kt)("h3",{id:"1-prepare-a-storage-node"},"1. Prepare a storage node"),(0,r.kt)("p",null,"Add the node into the Kubernetes cluster or select a Kubernetes node.\nThe node should have all the required items described in ",(0,r.kt)("a",{parentName:"p",href:"/docs/install/prereq"},"Prerequisites"),"."),(0,r.kt)("p",null,"For example, suppose you have a new node with the following information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"name: k8s-worker-4"),(0,r.kt)("li",{parentName:"ul"},"devPath: /dev/sdb"),(0,r.kt)("li",{parentName:"ul"},"diskType: SSD disk")),(0,r.kt)("p",null,"After the new node is already added into the Kubernetes cluster,\nmake sure the following HwameiStor pods are already running on this node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get node\nNAME           STATUS   ROLES            AGE     VERSION\nk8s-master-1   Ready    master           96d     v1.24.3-2+63243a96d1c393\nk8s-worker-1   Ready    worker           96h     v1.24.3-2+63243a96d1c393\nk8s-worker-2   Ready    worker           96h     v1.24.3-2+63243a96d1c393\nk8s-worker-3   Ready    worker           96d     v1.24.3-2+63243a96d1c393\nk8s-worker-4   Ready    worker           1h      v1.24.3-2+63243a96d1c393\n\n$ kubectl -n hwameistor get pod -o wide | grep k8s-worker-4\nhwameistor-local-disk-manager-c86g5     2/2     Running   0     19h   10.6.182.105      k8s-worker-4   <none>  <none>\nhwameistor-local-storage-s4zbw          2/2     Running   0     19h   192.168.140.82    k8s-worker-4   <none>  <none>\n\n# check if LocalStorageNode exists\n$ kubectl get localstoragenode k8s-worker-4\nNAME                 IP           ZONE      REGION    STATUS   AGE\nk8s-worker-4   10.6.182.103       default   default   Ready    8d\n")),(0,r.kt)("h3",{id:"2-add-the-storage-node-into-hwameistor"},"2. Add the storage node into HwameiStor"),(0,r.kt)("p",null,"Construct the storage pool of the node by adding a LocalStorageClaim CR as below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ kubectl apply -f - <<EOF\napiVersion: hwameistor.io/v1alpha1\nkind: LocalDiskClaim\nmetadata:\n  name: k8s-worker-4\nspec:\n  nodeName: k8s-worker-4\n  owner: local-storage\n  description:\n    diskType: SSD\nEOF\n")),(0,r.kt)("h3",{id:"3-post-check"},"3. Post check"),(0,r.kt)("p",null,"Finally, check if the node has constructed the storage pool by checking the LocalStorageNode CR."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get localstoragenode k8s-worker-4 -o yaml\n")),(0,r.kt)("p",null,"The output may look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: hwameistor.io/v1alpha1\nkind: LocalStorageNode\nmetadata:\n  name: k8s-worker-4\nspec:\n  hostname: k8s-worker-4\n  storageIP: 10.6.182.103\n  topogoly:\n    region: default\n    zone: default\nstatus:\n  pools:\n    LocalStorage_PoolSSD:\n      class: SSD\n      disks:\n      - capacityBytes: 214744170496\n        devPath: /dev/sdb\n        state: InUse\n        type: SSD\n      freeCapacityBytes: 214744170496\n      freeVolumeCount: 1000\n      name: LocalStorage_PoolSSD\n      totalCapacityBytes: 214744170496\n      totalVolumeCount: 1000\n      type: REGULAR\n      usedCapacityBytes: 0\n      usedVolumeCount: 0\n      volumeCapacityBytesLimit: 214744170496\n      volumes:\n  state: Ready\n")))}p.isMDXComponent=!0}}]);