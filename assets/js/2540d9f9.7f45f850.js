"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2096],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(a),u=r,d=h["".concat(i,".").concat(u)]||h[u]||m[u]||l;return a?n.createElement(d,o(o({ref:t},p),{},{components:a})):n.createElement(d,o({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},4040:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:2,sidebar_label:"Install by Helm Charts"},o="Install by Helm Charts",s={unversionedId:"installation/helm-chart",id:"installation/helm-chart",title:"Install by Helm Charts",description:"Local Storage is a component of HwameiStor and must work with Local Disk Manager module. It's suggested to install by helm-charts.",source:"@site/docs/02.installation/01.helm-chart.md",sourceDirName:"02.installation",slug:"/installation/helm-chart",permalink:"/docs/installation/helm-chart",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/02.installation/01.helm-chart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Install by Helm Charts"},sidebar:"tutorialSidebar",previous:{title:"Prerequisites",permalink:"/docs/installation/prepare"},next:{title:"Install Independently",permalink:"/docs/installation/install"}},i={},c=[{value:"Step 1: Install HwameiStor",id:"step-1-install-hwameistor",level:2},{value:"Step 2: Enable HwameiStor on a node",id:"step-2-enable-hwameistor-on-a-node",level:2},{value:"Step 3: Claim disks by types on a node",id:"step-3-claim-disks-by-types-on-a-node",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"install-by-helm-charts"},"Install by Helm Charts"),(0,r.kt)("p",null,"Local Storage is a component of HwameiStor and must work with Local Disk Manager module. It's suggested to install by helm-charts."),(0,r.kt)("p",null,"This functionality is in alpha and is subject to change. The code is provided as-is with no warranties. Alpha features are not subject to the support SLA of official GA features.  "),(0,r.kt)("p",null,"To install it by helm charts, perform the following procedure."),(0,r.kt)("h2",{id:"step-1-install-hwameistor"},"Step 1: Install HwameiStor"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm")," is required to use charts for installation. Refer to Helm's ",(0,r.kt)("a",{parentName:"p",href:"https://helm.sh/docs/"},"Documentation")," to get started."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/hwameistor/helm-charts.git \n$ cd helm-charts/charts \n$ helm install hwameistor -n hwameistor --create-namespace --generate-name\n")),(0,r.kt)("p",null,"Or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm repo add hwameistor http://hwameistor.io/helm-charts \n$ helm install hwameistor/hwameistor -n hwameistor --create-namespace --generate-name\n")),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"helm search repo hwameistor")," to check the charts."),(0,r.kt)("h2",{id:"step-2-enable-hwameistor-on-a-node"},"Step 2: Enable HwameiStor on a node"),(0,r.kt)("p",null,"Once the Helm charts are installed, you can enable HwameiStor on a specific node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl label node <node-name> "lvm.hwameistor.io/enable=true"\n')),(0,r.kt)("h2",{id:"step-3-claim-disks-by-types-on-a-node"},"Step 3: Claim disks by types on a node"),(0,r.kt)("p",null,"Then claim disks for your local-storage by applying LocalDiskClaim CR."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"cat > ./local-disk-claim.yaml <<- EOF\napiVersion: hwameistor.io/v1alpha1\nkind: LocalDiskClaim\nmetadata:\n  name: <anyname>\n  namespace: hwameistor\nspec:\n  nodeName: <node-name>\n  description:\n    diskType: <HDD or SSD or NVMe>\nEOF\n")),(0,r.kt)("p",null,"Congratulations! HwameiStor is successfully deployed on your cluster now."))}m.isMDXComponent=!0}}]);