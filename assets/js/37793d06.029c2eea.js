"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1522],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,k=m["".concat(s,".").concat(u)]||m[u]||c[u]||l;return a?n.createElement(k,i(i({ref:t},d),{},{components:a})):n.createElement(k,i({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6968:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:1,sidebar_label:"Local Disk Manager"},i="Local Disk Manager",o={unversionedId:"architecture/modules/ldm",id:"architecture/modules/ldm",title:"Local Disk Manager",description:"Local Disk Manager (LDM) is one of the modules of HwameiStor. LDM is used to simplify the management of disks on nodes. It can abstract the disk on a node into a resource for monitoring and management purposes. It's a daemon that will be deployed on each node, then detect the disk on the node, abstract it into local disk (LD) resources and save it to kubernetes.",source:"@site/docs/architecture/modules/ldm.md",sourceDirName:"architecture/modules",slug:"/architecture/modules/ldm",permalink:"/docs/architecture/modules/ldm",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/architecture/modules/ldm.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Local Disk Manager"},sidebar:"tutorialSidebar",previous:{title:"Modules",permalink:"/docs/category/modules"},next:{title:"Local Storage",permalink:"/docs/architecture/modules/ls"}},s={},p=[{value:"Concepts",id:"concepts",level:2},{value:"Usage",id:"usage",level:2},{value:"Roadmap",id:"roadmap",level:2}],d={toc:p};function c(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-disk-manager"},"Local Disk Manager"),(0,r.kt)("p",null,"Local Disk Manager (LDM) is one of the modules of HwameiStor. ",(0,r.kt)("inlineCode",{parentName:"p"},"LDM")," is used to simplify the management of disks on nodes. It can abstract the disk on a node into a resource for monitoring and management purposes. It's a daemon that will be deployed on each node, then detect the disk on the node, abstract it into local disk (LD) resources and save it to kubernetes."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"LDM \u67b6\u6784\u56fe",src:a(1606).Z,width:"1210",height:"481"})),(0,r.kt)("p",null,"At present, the LDM project is still in the ",(0,r.kt)("inlineCode",{parentName:"p"},"alpha")," stage."),(0,r.kt)("h2",{id:"concepts"},"Concepts"),(0,r.kt)("p",null,"LocalDisk (LD): LDM abstracts disk resources into objects in kubernetes. An ",(0,r.kt)("inlineCode",{parentName:"p"},"LD")," resource object represents the disk resources on the host."),(0,r.kt)("p",null,"LocalDiskClaim (LDC): This is a way to use disks. A user can add the disk description to select a disk for use."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"At present, LDC supports the following options to describe disk:"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"NodeName"),(0,r.kt)("li",{parentName:"ul"},"Capacity"),(0,r.kt)("li",{parentName:"ul"},"DiskType (such as HDD/SSD/NVMe)"))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get the LocalDisk information."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get localdisk\nNAME               NODEMATCH        PHASE\n10-6-118-11-sda    10-6-118-11      Available\n10-6-118-11-sdb    10-6-118-11      Available\n")),(0,r.kt)("p",{parentName:"li"},"Get locally discovered disk resource information with four columns displayed."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NAME:")," represents how this disk is displayed in the cluster resources."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NODEMATCH:")," indicates which host this disk is on."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CLAIM:")," indicates which ",(0,r.kt)("inlineCode",{parentName:"li"},"Claim")," statement this disk is used by."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PHASE:")," represents the current state of the disk.")),(0,r.kt)("p",{parentName:"li"},"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"kuebctl get localdisk <name> -o yaml")," to view more information about disks.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Claim available disks."),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Apply a LocalDiskClaim."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f deploy/samples/hwameistor.io_v1alpha1_localdiskclaim_cr.yaml\n")),(0,r.kt)("p",{parentName:"li"},"Allocate available disks by issuing a disk usage request. In the request description, you can add more requirements about the disk, such as disk type and capacity.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get the LocalDiskClaim infomation."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get localdiskclaim <name>\n")),(0,r.kt)("p",{parentName:"li"},"Check the status of ",(0,r.kt)("inlineCode",{parentName:"p"},"Claim"),". If a disk is available, you will find that the status is changed to ",(0,r.kt)("inlineCode",{parentName:"p"},"Bound"),", the localdisk status will be Claimed, and it points to the claim that references the disk."))))),(0,r.kt)("h2",{id:"roadmap"},"Roadmap"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Feature"),(0,r.kt)("th",{parentName:"tr",align:null},"Status"),(0,r.kt)("th",{parentName:"tr",align:null},"Release"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CSI for disk volume"),(0,r.kt)("td",{parentName:"tr",align:null},"Planned"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CSI")," driver for provisioning Local PVs with bare ",(0,r.kt)("inlineCode",{parentName:"td"},"Disk"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Disk management"),(0,r.kt)("td",{parentName:"tr",align:null},"Planned"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Disk management, disk allocation, disk event aware processing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Disk health management"),(0,r.kt)("td",{parentName:"tr",align:null},"Planned"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Disk health management")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HA disk Volume"),(0,r.kt)("td",{parentName:"tr",align:null},"Planned"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"HA disk Volume")))))}c.isMDXComponent=!0},1606:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ldm-b9dcc807d2b395c426569e542d4f5983.png"}}]);