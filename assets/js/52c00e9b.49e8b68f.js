"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6068],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),i=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=i(e.components);return o.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(t),m=r,k=u["".concat(d,".").concat(m)]||u[m]||c[m]||a;return t?o.createElement(k,s(s({ref:n},p),{},{components:t})):o.createElement(k,s({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var i=2;i<a;i++)s[i]=t[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9083:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var o=t(7462),r=(t(7294),t(3905));const a={sidebar_position:1,sidebar_label:"LVM Storage Node"},s="LVM Storage Node",l={unversionedId:"volumes_and_nodes/node_expansion/lvm_nodes",id:"volumes_and_nodes/node_expansion/lvm_nodes",title:"LVM Storage Node",description:"LVM storage nodes pool the disks on the node and provide LVM-type data volumes for applications.",source:"@site/docs/volumes_and_nodes/node_expansion/lvm_nodes.md",sourceDirName:"volumes_and_nodes/node_expansion",slug:"/volumes_and_nodes/node_expansion/lvm_nodes",permalink:"/docs/volumes_and_nodes/node_expansion/lvm_nodes",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/edit/main/docs/docs/volumes_and_nodes/node_expansion/lvm_nodes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"LVM Storage Node"},sidebar:"tutorialSidebar",previous:{title:"Disk Volume",permalink:"/docs/volumes_and_nodes/create_hwameistor_volumes/disk_volumes"},next:{title:"Disk Storage Node",permalink:"/docs/volumes_and_nodes/node_expansion/disk_nodes"}},d={},i=[{value:"Steps",id:"steps",level:2},{value:"1. Prepare a storage node",id:"1-prepare-a-storage-node",level:3},{value:"2. Add the storage node into HwameiStor",id:"2-add-the-storage-node-into-hwameistor",level:3},{value:"3. Post check",id:"3-post-check",level:3}],p={toc:i};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lvm-storage-node"},"LVM Storage Node"),(0,r.kt)("p",null,"LVM storage nodes pool the disks on the node and provide LVM-type data volumes for applications."),(0,r.kt)("h2",{id:"steps"},"Steps"),(0,r.kt)("h3",{id:"1-prepare-a-storage-node"},"1. Prepare a storage node"),(0,r.kt)("p",null,"Add the node into the Kubernetes cluster or select a Kubernetes node.\nThe node should have all the required items described in ",(0,r.kt)("a",{parentName:"p",href:"/docs/quick_start/install/prereq"},"Prerequisites"),"."),(0,r.kt)("p",null,"For example, suppose you have a new node with the following information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"name: k8s-worker-4"),(0,r.kt)("li",{parentName:"ul"},"devPath: /dev/sdb"),(0,r.kt)("li",{parentName:"ul"},"diskType: SSD disk")),(0,r.kt)("p",null,"After the new node is already added into the Kubernetes cluster,\nmake sure the following HwameiStor pods are already running on this node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get node\nNAME           STATUS   ROLES            AGE     VERSION\nk8s-master-1   Ready    master           96d     v1.24.3-2+63243a96d1c393\nk8s-worker-1   Ready    worker           96h     v1.24.3-2+63243a96d1c393\nk8s-worker-2   Ready    worker           96h     v1.24.3-2+63243a96d1c393\nk8s-worker-3   Ready    worker           96d     v1.24.3-2+63243a96d1c393\nk8s-worker-4   Ready    worker           1h      v1.24.3-2+63243a96d1c393\n\n$ kubectl -n hwameistor get pod -o wide | grep k8s-worker-4\nhwameistor-local-disk-manager-c86g5     2/2     Running   0     19h   10.6.182.105      k8s-worker-4   <none>  <none>\nhwameistor-local-storage-s4zbw          2/2     Running   0     19h   192.168.140.82    k8s-worker-4   <none>  <none>\n\n# check if LocalStorageNode exists\n$ kubectl get localstoragenode k8s-worker-4\nNAME                 IP           ZONE      REGION    STATUS   AGE\nk8s-worker-4   10.6.182.103       default   default   Ready    8d\n")),(0,r.kt)("h3",{id:"2-add-the-storage-node-into-hwameistor"},"2. Add the storage node into HwameiStor"),(0,r.kt)("p",null,"Construct the storage pool of the node by adding a LocalStorageClaim CR as below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ kubectl apply -f - <<EOF\napiVersion: hwameistor.io/v1alpha1\nkind: LocalDiskClaim\nmetadata:\n  name: k8s-worker-4\nspec:\n  nodeName: k8s-worker-4\n  owner: local-storage\n  description:\n    diskType: SSD\nEOF\n")),(0,r.kt)("h3",{id:"3-post-check"},"3. Post check"),(0,r.kt)("p",null,"Finally, check if the node has constructed the storage pool by checking the LocalStorageNode CR."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get localstoragenode k8s-worker-4 -o yaml\n")),(0,r.kt)("p",null,"The output may look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: hwameistor.io/v1alpha1\nkind: LocalStorageNode\nmetadata:\n  name: k8s-worker-4\nspec:\n  hostname: k8s-worker-4\n  storageIP: 10.6.182.103\n  topogoly:\n    region: default\n    zone: default\nstatus:\n  pools:\n    LocalStorage_PoolSSD:\n      class: SSD\n      disks:\n      - capacityBytes: 214744170496\n        devPath: /dev/sdb\n        state: InUse\n        type: SSD\n      freeCapacityBytes: 214744170496\n      freeVolumeCount: 1000\n      name: LocalStorage_PoolSSD\n      totalCapacityBytes: 214744170496\n      totalVolumeCount: 1000\n      type: REGULAR\n      usedCapacityBytes: 0\n      usedVolumeCount: 0\n      volumeCapacityBytesLimit: 214744170496\n      volumes:\n  state: Ready\n")))}c.isMDXComponent=!0}}]);