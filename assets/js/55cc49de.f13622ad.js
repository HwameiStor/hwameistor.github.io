"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8931],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(r),u=o,h=c["".concat(s,".").concat(u)]||c[u]||d[u]||n;return r?a.createElement(h,l(l({ref:t},m),{},{components:r})):a.createElement(h,l({ref:t},m))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<n;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7630:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var a=r(7462),o=(r(7294),r(3905));const n={sidebar_position:2,sidebar_label:"Deploy by Helm Charts"},l="Deploy by Helm Charts",i={unversionedId:"quick_start/install/deploy",id:"quick_start/install/deploy",title:"Deploy by Helm Charts",description:"The entire HwameiStor stack can be easily deployed by Helm Charts.",source:"@site/docs/quick_start/install/deploy.md",sourceDirName:"quick_start/install",slug:"/quick_start/install/deploy",permalink:"/docs/quick_start/install/deploy",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/quick_start/install/deploy.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Deploy by Helm Charts"},sidebar:"tutorialSidebar",previous:{title:"Prerequisites",permalink:"/docs/quick_start/install/prereq"},next:{title:"Post-Deployment Checkout",permalink:"/docs/quick_start/install/post_check"}},s={},p=[{value:"Steps",id:"steps",level:2},{value:"1. Prepare helm tools",id:"1-prepare-helm-tools",level:3},{value:"2. Download <code>hwameistor</code> repo",id:"2-download-hwameistor-repo",level:3},{value:"3. Deploy HwameiStor",id:"3-deploy-hwameistor",level:3},{value:"Use image repository mirrors",id:"use-image-repository-mirrors",level:2},{value:"Customize kubelet root directory",id:"customize-kubelet-root-directory",level:2},{value:"Production setup",id:"production-setup",level:2},{value:"Optional Install DRBD",id:"optional-install-drbd",level:2}],m={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-by-helm-charts"},"Deploy by Helm Charts"),(0,o.kt)("p",null,"The entire HwameiStor stack can be easily deployed by Helm Charts."),(0,o.kt)("h2",{id:"steps"},"Steps"),(0,o.kt)("h3",{id:"1-prepare-helm-tools"},"1. Prepare helm tools"),(0,o.kt)("p",null,"To install ",(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm")," commandline tool, please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/docs/"},"Helm's Documentation"),"."),(0,o.kt)("h3",{id:"2-download-hwameistor-repo"},"2. Download ",(0,o.kt)("inlineCode",{parentName:"h3"},"hwameistor")," repo"),(0,o.kt)("p",null,"Download and extract repo file to the local directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ helm repo add hwameistor http://hwameistor.io/hwameistor\n\n$ helm repo update hwameistor\n\n$ helm pull hwameistor/hwameistor --untar\n")),(0,o.kt)("h3",{id:"3-deploy-hwameistor"},"3. Deploy HwameiStor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ helm install hwameistor ./hwameistor \\\n    -n hwameistor --create-namespace\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"That's it!")),(0,o.kt)("p",null,"To verify the deployment, please refer to the next chapter ",(0,o.kt)("a",{parentName:"p",href:"/docs/quick_start/install/post_check"},"Post Deployment")),(0,o.kt)("h2",{id:"use-image-repository-mirrors"},"Use image repository mirrors"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The default image repositories are ",(0,o.kt)("inlineCode",{parentName:"p"},"k8s.gcr.io")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ghcr.io"),".\nIn case they are blocked in some places, DaoCloud provides their mirrors at ",(0,o.kt)("inlineCode",{parentName:"p"},"k8s-gcr.m.daocloud.io")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ghcr.m.daocloud.io"))),(0,o.kt)("p",null,"To switch image repository mirrors, use ",(0,o.kt)("inlineCode",{parentName:"p"},"--set")," to change the value of parameters: ",(0,o.kt)("inlineCode",{parentName:"p"},"k8sImageRegistry")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"hwameistorImageRegistry")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ helm install hwameistor ./hwameistor \\\n    -n hwameistor --create-namespace \\\n    --set k8sImageRegistry=k8s-gcr.m.daocloud.io \\\n    --set hwameistorImageRegistry=ghcr.m.daocloud.io\n")),(0,o.kt)("h2",{id:"customize-kubelet-root-directory"},"Customize kubelet root directory"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The default ",(0,o.kt)("inlineCode",{parentName:"p"},"kubelet")," directory is ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/lib/kubelet"),".\nIf your Kubernetes distribution uses a different ",(0,o.kt)("inlineCode",{parentName:"p"},"kubelet")," directory, you must set the parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"kubeletRootDir"),".")),(0,o.kt)("p",null,"For example, on ",(0,o.kt)("a",{parentName:"p",href:"https://microk8s.io/"},"Canonical's MicroK8s")," which uses ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/snap/microk8s/common/var/lib/kubelet/")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"kubelet")," directory,  HwameiStor needs to be deployed as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ helm install hwameistor ./hwameistor \\\n    -n hwameistor --create-namespace \\\n    --set kubeletRootDir=/var/snap/microk8s/common/var/lib/kubelet/\n")),(0,o.kt)("h2",{id:"production-setup"},"Production setup"),(0,o.kt)("p",null,"A production environment would require:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"specify resource configuration"),(0,o.kt)("li",{parentName:"ul"},"avoid deploying on master nodes"),(0,o.kt)("li",{parentName:"ul"},"implement quick failover of controllers")),(0,o.kt)("p",null,"We provide some recommended values in ",(0,o.kt)("inlineCode",{parentName:"p"},"values.extra.prod.yaml"),", to use it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ helm install hwameistor ./hwameistor \\\n    -n hwameistor --create-namespace \\\n    -f ./hwameistor/values.yaml \\\n    -f ./hwameistor/values.extra.prod.yaml\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"In a resource-strained test environment, setting the above-mentioned values would cause pods unable to start! ")),(0,o.kt)("h2",{id:"optional-install-drbd"},"[Optional]"," Install DRBD"),(0,o.kt)("p",null,"To enable provisioning HA volumes, DRBD must be installed:"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Please refer to ",(0,o.kt)("a",{parentName:"p",href:"/docs/quick_start/install/prereq"},(0,o.kt)("strong",{parentName:"a"},"Prerequisites"))," for environmental requirements.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ helm pull hwameistor/drbd-adapter --untar\n\n$ helm install drbd-adapter ./drbd-adapter \\\n    -n hwameistor --create-namespace\n")),(0,o.kt)("p",null,"Users in China may use mirror ",(0,o.kt)("inlineCode",{parentName:"p"},"daocloud.io/daocloud")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ helm install drbd-adapter ./drbd-adapter \\\n    -n hwameistor --create-namespace \\\n    --set registry=daocloud.io/daocloud\n")))}d.isMDXComponent=!0}}]);