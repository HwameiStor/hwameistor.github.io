"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1372],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=o,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return a?n.createElement(g,l(l({ref:t},d),{},{components:a})):n.createElement(g,l({ref:t},d))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},2991:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));const r={sidebar_position:8,sidebar_label:"Local Cache Volumes "},l="Local Cache Volumes",i={unversionedId:"volumes/cache",id:"volumes/cache",title:"Local Cache Volumes",description:"It is very simple to run AI training applications using HwameiStor",source:"@site/docs/volumes/cache.md",sourceDirName:"volumes",slug:"/volumes/cache",permalink:"/docs/volumes/cache",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/edit/main/docs/docs/volumes/cache.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,sidebar_label:"Local Cache Volumes "},sidebar:"tutorialSidebar",previous:{title:"Eviction",permalink:"/docs/volumes/volume_eviction"},next:{title:"Local Volumes",permalink:"/docs/volumes/local"}},s={},c=[{value:"Verify <code>DataSet</code>",id:"verify-dataset",level:2},{value:"Create <code>DataSet</code>",id:"create-dataset",level:2},{value:"Create a PVC and bind it to dataset PV",id:"create-a-pvc-and-bind-it-to-dataset-pv",level:2},{value:"Create <code>StatefulSet</code>",id:"create-statefulset",level:2},{value:"Verify Nginx Pod",id:"verify-nginx-pod",level:2},{value:"Optional Scale Nginx out into a 3-node Cluster",id:"optional-scale-nginx-out-into-a-3-node-cluster",level:2}],d={toc:c};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"local-cache-volumes"},"Local Cache Volumes"),(0,o.kt)("p",null,"It is very simple to run AI training applications using HwameiStor"),(0,o.kt)("p",null,"As an example, we will deploy an Nginx application by creating a local cache volume."),(0,o.kt)("h2",{id:"verify-dataset"},"Verify ",(0,o.kt)("inlineCode",{parentName:"h2"},"DataSet")),(0,o.kt)("p",null,"Take minio as an example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"apiVersion: datastore.io/v1alpha1\nkind: DataSet\nmetadata:\n  name: dataset-test\nspec:\n  refresh: true\n  type: minio\n  minio:\n    endpoint: Your service ip address:9000\n    bucket: BucketName/Dir  #Defined according to the directory level where your dataset is located\n    secretKey: minioadmin\n    accessKey: minioadmin\n    region: ap-southeast-2  \n")),(0,o.kt)("h2",{id:"create-dataset"},"Create ",(0,o.kt)("inlineCode",{parentName:"h2"},"DataSet")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Console"},"$ kubectl apply -f dataset.yaml\n")),(0,o.kt)("p",null,"Confirm that the cache volume has been created successfully"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Console"},"$ k get dataset\nNAME           TYPE    LASTREFRESHTIME   CONNECTED   AGE     ERROR\ndataset-test   minio                                 4m38s\n\n$ k get lv\nNAME                                       POOL                   REPLICAS   CAPACITY     USED        STATE   PUBLISHED           AGE\ndataset-test                               LocalStorage_PoolHDD              211812352                Ready                       4m27s\n\n$ k get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                                                    STORAGECLASS                 REASON   AGE\ndataset-test                               202Mi      ROX            Retain           Available                                                                                                  35s\n\n")),(0,o.kt)("p",null,"The size of pv is determined by the size of your data set"),(0,o.kt)("h2",{id:"create-a-pvc-and-bind-it-to-dataset-pv"},"Create a PVC and bind it to dataset PV"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Console"},"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: hwameistor-dataset\n  namespace: default\nspec:\n  accessModes:\n  - ReadOnlyMany\n  resources:\n    requests:\n      storage: 202Mi  #dataset size\n  volumeMode: Filesystem\n  volumeName: dataset-test  #dataset name\n")),(0,o.kt)("p",null,"Confirm that the pvc has been created successfully"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Console"},"\n## Verify  PVC\n\n$ k get pvc\nk get pvc\nNAME                 STATUS   VOLUME         CAPACITY   ACCESS MODES   STORAGECLASS   AGE\nhwameistor-dataset   Bound    dataset-test   202Mi      ROX                           4s\n")),(0,o.kt)("h2",{id:"create-statefulset"},"Create ",(0,o.kt)("inlineCode",{parentName:"h2"},"StatefulSet")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Console"},"$ kubectl apply -f sts-nginx-AI.yaml\n")),(0,o.kt)("p",null,"Please note the ",(0,o.kt)("inlineCode",{parentName:"p"},"claimName")," uses the name of the pvc bound to the dataset"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"    spec:\n      volumes:\n        - name: data\n          persistentVolumeClaim:\n            claimName: hwameistor-dataset\n")),(0,o.kt)("h2",{id:"verify-nginx-pod"},"Verify Nginx Pod"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Console"},"$ kubectl get pod\nNAME               READY   STATUS            RESTARTS   AGE\nnginx-dataload-0   1/1     Running           0          3m58s\n$ kubectl  logs nginx-dataload-0 hwameistor-dataloader\nCreated custom resource\nCustom resource deleted, exiting\nDataLoad execution time: 1m20.24310857s\n")),(0,o.kt)("p",null,"According to the log, loading data took 1m20.24310857s"),(0,o.kt)("h2",{id:"optional-scale-nginx-out-into-a-3-node-cluster"},"[Optional]"," Scale Nginx out into a 3-node Cluster"),(0,o.kt)("p",null,"HwameiStor cache volumes support horizontal expansion of ",(0,o.kt)("inlineCode",{parentName:"p"},"StatefulSet"),". Each ",(0,o.kt)("inlineCode",{parentName:"p"},"pod")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"StatefulSet")," will attach and mount a HwameiStor cache volume bound to the same dataset."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ kubectl scale sts/sts-nginx-AI --replicas=3\n\n$ kubectl get pod -o wide\nNAME               READY   STATUS    RESTARTS   AGE\nnginx-dataload-0   1/1     Running   0          41m\nnginx-dataload-1   1/1     Running   0          37m\nnginx-dataload-2   1/1     Running   0          35m\n\n\n$ kubectl logs nginx-dataload-1 hwameistor-dataloader\nCreated custom resource\nCustom resource deleted, exiting\nDataLoad execution time: 3.24310857s\n\n$ kubectl logs nginx-dataload-2 hwameistor-dataloader\nCreated custom resource\nCustom resource deleted, exiting\nDataLoad execution time: 2.598923144s\n\n")),(0,o.kt)("p",null,"According to the log, the second and third loading of data only took 3.24310857s and 2.598923144s respectively. Compared with the first loading, the speed has been greatly improved."))}u.isMDXComponent=!0}}]);