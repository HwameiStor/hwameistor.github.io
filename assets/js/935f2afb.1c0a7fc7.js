"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"What is HwameiStor","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Quick Start","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Installation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Prerequisites","href":"/docs/quick_start/2.1.installation/2.1.1.prerequisites","docId":"quick_start/2.1.installation/2.1.1.prerequisites"},{"type":"link","label":"Deploy by Helm Charts","href":"/docs/quick_start/2.1.installation/2.1.2.deploy_helm_charts","docId":"quick_start/2.1.installation/2.1.2.deploy_helm_charts"},{"type":"link","label":"Post-Deployment Inspect","href":"/docs/quick_start/2.1.installation/2.1.3.post_deployment_inspect","docId":"quick_start/2.1.installation/2.1.3.post_deployment_inspect"},{"type":"link","label":"Set up a Storage Pool","href":"/docs/quick_start/2.1.installation/2.1.4.set_up_a_storage_pool","docId":"quick_start/2.1.installation/2.1.4.set_up_a_storage_pool"}]},{"type":"category","label":"Start a Stateful Application","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Operations","href":"/docs/quick_start/2.2.start_a_stateful_application/2.2.1.basic_operations","docId":"quick_start/2.2.start_a_stateful_application/2.2.1.basic_operations"},{"type":"link","label":"Advanced Operations","href":"/docs/quick_start/2.2.start_a_stateful_application/2.2.2.advanced_operations","docId":"quick_start/2.2.start_a_stateful_application/2.2.2.advanced_operations"}]},{"type":"category","label":"Advanced Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Node Expansion","href":"/docs/quick_start/2.3.advanced_features/2.3.1.node_expansion","docId":"quick_start/2.3.advanced_features/2.3.1.node_expansion"},{"type":"link","label":"Disk Expansion","href":"/docs/quick_start/2.3.advanced_features/2.3.2.disk_expansion","docId":"quick_start/2.3.advanced_features/2.3.2.disk_expansion"},{"type":"link","label":"Upgrade","href":"/docs/quick_start/2.3.advanced_features/2.3.3.upgrade","docId":"quick_start/2.3.advanced_features/2.3.3.upgrade"}]},{"type":"link","label":"Uninstall","href":"/docs/quick_start/2.4.uninstall","docId":"quick_start/2.4.uninstall"}]},{"type":"category","label":"Architecture of HwameiStor","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/architecture_of_hwameistor/3.1.overview","docId":"architecture_of_hwameistor/3.1.overview"},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Local Disk Manager","href":"/docs/architecture_of_hwameistor/3.2.modules/3.2.1.local_disk_manager","docId":"architecture_of_hwameistor/3.2.modules/3.2.1.local_disk_manager"},{"type":"link","label":"Local Storage","href":"/docs/architecture_of_hwameistor/3.2.modules/3.2.2.local_storage","docId":"architecture_of_hwameistor/3.2.modules/3.2.2.local_storage"},{"type":"link","label":"DRBD Installer","href":"/docs/architecture_of_hwameistor/3.2.modules/3.2.3.drbd_installer","docId":"architecture_of_hwameistor/3.2.modules/3.2.3.drbd_installer"},{"type":"link","label":"Scheduler","href":"/docs/architecture_of_hwameistor/3.2.modules/3.2.4.scheduler","docId":"architecture_of_hwameistor/3.2.modules/3.2.4.scheduler"},{"type":"link","label":"Admission Controller","href":"/docs/architecture_of_hwameistor/3.2.modules/3.2.5.admission_controller","docId":"architecture_of_hwameistor/3.2.modules/3.2.5.admission_controller"}]},{"type":"link","label":"Resources","href":"/docs/architecture_of_hwameistor/3.3.resources","docId":"architecture_of_hwameistor/3.3.resources"},{"type":"link","label":"APIs","href":"/docs/architecture_of_hwameistor/3.4.apis","docId":"architecture_of_hwameistor/3.4.apis"}]},{"type":"category","label":"Development Designs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/development_designs/4.1.overview","docId":"development_designs/4.1.overview"}]},{"type":"category","label":"Applications","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/docs/applications/5.1.overview","docId":"applications/5.1.overview"},{"type":"link","label":"Minio","href":"/docs/applications/5.2.minio","docId":"applications/5.2.minio"},{"type":"link","label":"TiDB","href":"/docs/applications/5.3.tidb","docId":"applications/5.3.tidb"}]},{"type":"category","label":"Terminologies","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Kubernetes Storage","href":"/docs/terminologies/6.1.kubernetes_storage","docId":"terminologies/6.1.kubernetes_storage"},{"type":"link","label":"CAS","href":"/docs/terminologies/6.2.cas","docId":"terminologies/6.2.cas"},{"type":"link","label":"CSI","href":"/docs/terminologies/6.3.csi","docId":"terminologies/6.3.csi"},{"type":"link","label":"CRD and CR","href":"/docs/terminologies/6.4.crd_and_cr","docId":"terminologies/6.4.crd_and_cr"},{"type":"link","label":"Volume","href":"/docs/terminologies/6.5.volume","docId":"terminologies/6.5.volume"},{"type":"link","label":"LVM","href":"/docs/terminologies/6.6.lvm","docId":"terminologies/6.6.lvm"},{"type":"link","label":"PV and PVC","href":"/docs/terminologies/6.7.pv_and_pvc","docId":"terminologies/6.7.pv_and_pvc"}]},{"type":"link","label":"Community","href":"/docs/community","docId":"community"},{"type":"link","label":"FAQs","href":"/docs/faqs","docId":"faqs"}]},"docs":{"applications/5.1.overview":{"id":"applications/5.1.overview","title":"Overview","description":"HwameiStor provisions two kind of local volumes: LVM and Disk.","sidebar":"tutorialSidebar"},"applications/5.2.minio":{"id":"applications/5.2.minio","title":"Minio","description":"","sidebar":"tutorialSidebar"},"applications/5.3.tidb":{"id":"applications/5.3.tidb","title":"TiDB","description":"","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.1.overview":{"id":"architecture_of_hwameistor/3.1.overview","title":"Overview","description":"","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.2.modules/3.2.1.local_disk_manager":{"id":"architecture_of_hwameistor/3.2.modules/3.2.1.local_disk_manager","title":"Local Disk Manager","description":"Local Disk Manager (LDM) is one of the modules of HwameiStor. LDM is used to simplify the management of disks on nodes. It can abstract the disk on a node into a resource for monitoring and management purposes. It\'s a daemon that will be deployed on each node, then detect the disk on the node, abstract it into local disk (LD) resources and save it to kubernetes.","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.2.modules/3.2.2.local_storage":{"id":"architecture_of_hwameistor/3.2.modules/3.2.2.local_storage","title":"Local Storage","description":"Local Storage is one of the modules of HwameiStor which is a cloud-native local storage system. It provisions high performance and persistent LVM volume with local access to applications.","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.2.modules/3.2.3.drbd_installer":{"id":"architecture_of_hwameistor/3.2.modules/3.2.3.drbd_installer","title":"DRBD Installer","description":"DRBD (Distributed Replicated Block Device) is composed of Linux kernel modules and related scripts to build high available clusters. It is implemented by mirroring the entire device over the network, which can be thought of as a kind of network RAID.","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.2.modules/3.2.4.scheduler":{"id":"architecture_of_hwameistor/3.2.modules/3.2.4.scheduler","title":"Scheduler","description":"The Scheduler is used to automatically schedule the Pod to a correct node which is associated with HwameiStor volume. With the scheduler, the Pod does not need the NodeAffinity or NodeSelector field to select the node. A scheduler will work for both LVM and Disk volumes.","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.2.modules/3.2.5.admission_controller":{"id":"architecture_of_hwameistor/3.2.modules/3.2.5.admission_controller","title":"admission-controller","description":"admission-controller is a webhook that can automatically verify which pod uses the HwameiStor volume and, help to modify the schedulerName to hwameistor-scheduler. For the specific principle, refer to K8S Dynamic Admission Control.","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.3.resources":{"id":"architecture_of_hwameistor/3.3.resources","title":"Resources","description":"","sidebar":"tutorialSidebar"},"architecture_of_hwameistor/3.4.apis":{"id":"architecture_of_hwameistor/3.4.apis","title":"APIs","description":"CRD Object Classes","sidebar":"tutorialSidebar"},"community":{"id":"community","title":"Community","description":"If you have any questions about the HwameiStor cloud-native local storage system, welcome to join the community to explore this metaverse world dedicated to developers and grow together!","sidebar":"tutorialSidebar"},"development_designs/4.1.overview":{"id":"development_designs/4.1.overview","title":"Overview","description":"","sidebar":"tutorialSidebar"},"faqs":{"id":"faqs","title":"FAQs","description":"Q1: How does HwameiStor scheduler work in a Kubernetes platform?","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"What is HwameiStor","description":"HwameiStor is a Kubernetes native Container Attached Storage (CAS) solution that makes it possible for stateful applications to easily use dynamic local PVs or replicated PVs.","sidebar":"tutorialSidebar"},"quick_start/2.1.installation/2.1.1.prerequisites":{"id":"quick_start/2.1.installation/2.1.1.prerequisites","title":"Prerequisites","description":"HwameiStor must be deployed on a Kubernetes platform. The hosts must meet the below requirements:","sidebar":"tutorialSidebar"},"quick_start/2.1.installation/2.1.2.deploy_helm_charts":{"id":"quick_start/2.1.installation/2.1.2.deploy_helm_charts","title":"Deploy by Helm Charts","description":"The entire HwameiStor stack can be easily deployed by Helm Charts.","sidebar":"tutorialSidebar"},"quick_start/2.1.installation/2.1.3.post_deployment_inspect":{"id":"quick_start/2.1.installation/2.1.3.post_deployment_inspect","title":"Post-Deployment Inspection","description":"The below example is from a 4-node kubernetes cluster:","sidebar":"tutorialSidebar"},"quick_start/2.1.installation/2.1.4.set_up_a_storage_pool":{"id":"quick_start/2.1.installation/2.1.4.set_up_a_storage_pool","title":"Step up a Storage Pool","description":"Step 1: Create LocalDiskClaim objects","sidebar":"tutorialSidebar"},"quick_start/2.2.start_a_stateful_application/2.2.1.basic_operations":{"id":"quick_start/2.2.start_a_stateful_application/2.2.1.basic_operations","title":"Basic Operations","description":"","sidebar":"tutorialSidebar"},"quick_start/2.2.start_a_stateful_application/2.2.2.advanced_operations":{"id":"quick_start/2.2.start_a_stateful_application/2.2.2.advanced_operations","title":"Advanced Operations","description":"","sidebar":"tutorialSidebar"},"quick_start/2.3.advanced_features/2.3.1.node_expansion":{"id":"quick_start/2.3.advanced_features/2.3.1.node_expansion","title":"Node Expansion","description":"","sidebar":"tutorialSidebar"},"quick_start/2.3.advanced_features/2.3.2.disk_expansion":{"id":"quick_start/2.3.advanced_features/2.3.2.disk_expansion","title":"Disk Expansion","description":"","sidebar":"tutorialSidebar"},"quick_start/2.3.advanced_features/2.3.3.upgrade":{"id":"quick_start/2.3.advanced_features/2.3.3.upgrade","title":"Upgrade","description":"Helm makes upgrading HwameiStor very easy:","sidebar":"tutorialSidebar"},"quick_start/2.4.uninstall":{"id":"quick_start/2.4.uninstall","title":"Uninstall","description":"Before uninstalling HwameiStor, make sure you have backed up all the data.","sidebar":"tutorialSidebar"},"terminologies/6.1.kubernetes_storage":{"id":"terminologies/6.1.kubernetes_storage","title":"Kubernetes Storage","description":"Kubernetes has made several enhancements to support running Stateful Workloads by providing the required abstractions for Platform (or Cluster Administrators) and Application developers. The abstractions ensure that different types of file and block storage (whether ephemeral or persistent, local or remote) are available wherever a container is scheduled (including provisioning/creating, attaching, mounting, unmounting, detaching, and deleting of volumes), storage capacity management (container ephemeral storage usage, volume resizing, etc.), influencing scheduling of containers based on storage (data gravity, availability, etc.), and generic operations on storage (snapshotting, etc.).","sidebar":"tutorialSidebar"},"terminologies/6.2.cas":{"id":"terminologies/6.2.cas","title":"CAS","description":"Container Attached Storage (CAS) is software that includes microservice based storage controllers that are orchestrated by Kubernetes. These storage controllers can run anywhere that Kubernetes can run which means any cloud or even bare metal server or on top of a traditional shared storage system. Critically, the data itself is also accessed via containers as opposed to being stored in an off platform shared scale out storage system. Because CAS leverages a microservices architecture, it keeps the storage solution closely tied to the application bound to the physical storage device, reducing I/O latency.","sidebar":"tutorialSidebar"},"terminologies/6.3.csi":{"id":"terminologies/6.3.csi","title":"CSI","description":"CSI is the abbreviation of Container Storage Interface. To have a better understanding of what we\'re going to do, the first thing we need to know is what the Container Storage Interface is. Currently, there are still some problems for already existing storage subsystem within Kubernetes. Storage driver code is maintained in the Kubernetes core repository which is difficult to test. But beyond that, Kubernetes needs to give permissions to storage vendors to check code into the Kubernetes core repository. Ideally, that should be implemented externally.","sidebar":"tutorialSidebar"},"terminologies/6.4.crd_and_cr":{"id":"terminologies/6.4.crd_and_cr","title":"CRD and CR","description":"CRD","sidebar":"tutorialSidebar"},"terminologies/6.5.volume":{"id":"terminologies/6.5.volume","title":"Volume","description":"On-disk files in a container are ephemeral, which presents some problems for non-trivial applications when running in containers.","sidebar":"tutorialSidebar"},"terminologies/6.6.lvm":{"id":"terminologies/6.6.lvm","title":"LVM","description":"The full name of LVM is Logical Volume Manager. It adds a logical layer between the disk partition and the file system, provides an abstract disk volume for the file system to shield the underlying disk partition layout, and establishes a file system on the disk volume.","sidebar":"tutorialSidebar"},"terminologies/6.7.pv_and_pvc":{"id":"terminologies/6.7.pv_and_pvc","title":"PV and PVC","description":"The PersistentVolume subsystem provides an API for users and administrators that abstracts details of how storage is provided from how it is consumed. To do this, we introduce two new API resources: PersistentVolume (PV) and PersistentVolumeClaim (PVC). A PersistentVolume (PV) is a piece of storage in the cluster that has been provisioned by an administrator or dynamically provisioned using Storage Classes. It is a resource in the cluster just like a node is a cluster resource. PVs are volume plugins like Volumes, but have a lifecycle independent of any individual Pod that uses the PV. This API object captures the details of the implementation of the storage, be that NFS, iSCSI, or a cloud-provider-specific storage system.","sidebar":"tutorialSidebar"}}}')}}]);