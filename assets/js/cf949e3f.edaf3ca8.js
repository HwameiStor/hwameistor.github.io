"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7889],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),m=i,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5290:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_position:8,sidebar_label:"PVC Autoresizing"},o="PVC Autoresizing",s={unversionedId:"quick_start/advanced_features/pvc_autoresizing",id:"quick_start/advanced_features/pvc_autoresizing",title:"PVC Autoresizing",description:'The component "hwameistor-pvc-autoresizer" provides the ability to automatically resize Persistent Volume Claims (PVCs).',source:"@site/docs/quick_start/advanced_features/pvc_autoresizing.md",sourceDirName:"quick_start/advanced_features",slug:"/quick_start/advanced_features/pvc_autoresizing",permalink:"/docs/quick_start/advanced_features/pvc_autoresizing",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/edit/main/docs/docs/quick_start/advanced_features/pvc_autoresizing.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,sidebar_label:"PVC Autoresizing"},sidebar:"tutorialSidebar",previous:{title:"System Audit",permalink:"/docs/quick_start/advanced_features/system_audit"},next:{title:"Uninstall",permalink:"/docs/quick_start/uninstall"}},l={},c=[{value:"ResizePolicy",id:"resizepolicy",level:2},{value:"Match Rules",id:"match-rules",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pvc-autoresizing"},"PVC Autoresizing"),(0,i.kt)("p",null,'The component "hwameistor-pvc-autoresizer" provides the ability to automatically resize Persistent Volume Claims (PVCs).\nThe resizing behavior is controlled by the ',(0,i.kt)("inlineCode",{parentName:"p"},"ResizePolicy")," custom resource definition (CRD)."),(0,i.kt)("h2",{id:"resizepolicy"},"ResizePolicy"),(0,i.kt)("p",null,"An example of CR is as below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: hwameistor.io/v1alpha1\nkind: ResizePolicy\nmetadata:\n  name: resizepolicy1\nspec:\n  warningThreshold: 60\n  resizeThreshold: 80\n  nodePoolUsageLimit: 90\n")),(0,i.kt)("p",null,"The three fields ",(0,i.kt)("inlineCode",{parentName:"p"},"warningThreshold"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"resizeThreshold"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"nodePoolUsageLimit")," are all of type integer and represent percentages."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"warningThreshold")," currently does not have any associated alert actions. It serves as a\ntarget ratio, indicating that the usage rate of the volume will be below this percentage\nafter resizing is completed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"resizeThreshold")," indicates a usage rate at which the resizing action will be triggered\nwhen the volume's usage rate reaches this percentage."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nodePoolUsageLimit")," represents the upper limit of storage pool usage on a node. If the\nusage rate of a pool reaches this percentage, volumes assigned to that pool will not automatically resize.")),(0,i.kt)("h2",{id:"match-rules"},"Match Rules"),(0,i.kt)("p",null,"This is an examle of CR with label selectors."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: hwameistor.io/v1alpha1\nkind: ResizePolicy\nmetadata:\n  name: example-policy\nspec:\n  warningThreshold: 60\n  resizeThreshold: 80\n  nodePoolUsageLimit: 90\n  storageClassSelector:\n    matchLabels:\n      pvc-resize: auto\n  namespaceSelector:\n    matchLabels:\n      pvc-resize: auto\n  pvcSelector:\n    matchLabels:\n      pvc-resize: auto\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ResizePolicy")," has three label selectors:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pvcSelector")," indicates that PVCs selected by this selector will automatically resize according\nto the policy that selected them."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"namespaceSelector")," indicates that PVCs under namespaces selected by this selector will\nautomatically resize according to this policy."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"storageClassSelector")," indicates that PVCs created from storage classes selected by this\nselector will automatically resize according to this policy.")),(0,i.kt)("p",null,'These three selectors have an "AND" relationship. If you specify multiple selectors in a ',(0,i.kt)("inlineCode",{parentName:"p"},"ResizePolicy"),",\nthe PVCs must match all of the selectors in order to be associated with that policy. If no selectors are\nspecified in the ",(0,i.kt)("inlineCode",{parentName:"p"},"ResizePolicy"),", it becomes a cluster-wide ",(0,i.kt)("inlineCode",{parentName:"p"},"ResizePolicy"),", acting as the default policy\nfor all PVCs in the entire cluster."))}u.isMDXComponent=!0}}]);