"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1212],{3905:(e,o,n)=>{n.d(o,{Zo:()=>p,kt:()=>m});var r=n(7294);function t(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function a(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?a(Object(n),!0).forEach((function(o){t(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function l(e,o){if(null==e)return{};var n,r,t=function(e,o){if(null==e)return{};var n,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],o.indexOf(n)>=0||(t[n]=e[n]);return t}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var i=r.createContext({}),c=function(e){var o=r.useContext(i),n=o;return e&&(n="function"==typeof e?e(o):s(s({},o),e)),n},p=function(e){var o=c(e.components);return r.createElement(i.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},k=r.forwardRef((function(e,o){var n=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),k=c(n),m=t,u=k["".concat(i,".").concat(m)]||k[m]||d[m]||a;return n?r.createElement(u,s(s({ref:o},p),{},{components:n})):r.createElement(u,s({ref:o},p))}));function m(e,o){var n=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var a=n.length,s=new Array(a);s[0]=k;var l={};for(var i in o)hasOwnProperty.call(o,i)&&(l[i]=o[i]);l.originalType=e,l.mdxType="string"==typeof e?e:t,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5270:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),t=(n(7294),n(3905));const a={sidebar_position:3,sidebar_label:"Post-Deployment Inspect"},s="Post-Deployment Inspection",l={unversionedId:"installation/post-deploy",id:"installation/post-deploy",title:"Post-Deployment Inspection",description:"The below example is from a 4-node kubernetes cluster:",source:"@site/docs/01.installation/02.post-deploy.md",sourceDirName:"01.installation",slug:"/installation/post-deploy",permalink:"/docs/installation/post-deploy",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/01.installation/02.post-deploy.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Post-Deployment Inspect"},sidebar:"tutorialSidebar",previous:{title:"Deploy by Helm Charts",permalink:"/docs/installation/deploy"},next:{title:"Configure Storage Pool",permalink:"/docs/installation/config-pool"}},i={},c=[{value:"Step 1: Check the pods",id:"step-1-check-the-pods",level:2},{value:"Step 2: Check the APIs",id:"step-2-check-the-apis",level:2}],p={toc:c};function d(e){let{components:o,...n}=e;return(0,t.kt)("wrapper",(0,r.Z)({},p,n,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"post-deployment-inspection"},"Post-Deployment Inspection"),(0,t.kt)("p",null,"The below example is from a 4-node kubernetes cluster:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get no\nNAME           STATUS   ROLES   AGE   VERSION\nk8s-master-1   Ready    master  82d   v1.24.3-2+63243a96d1c393\nk8s-worker-1   Ready    worker  36d   v1.24.3-2+63243a96d1c393\nk8s-worker-2   Ready    worker  59d   v1.24.3-2+63243a96d1c393\nk8s-worker-3   Ready    worker  36d   v1.24.3-2+63243a96d1c393\n")),(0,t.kt)("h2",{id:"step-1-check-the-pods"},"Step 1: Check the pods"),(0,t.kt)("p",null,"The following pods should be up and running:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl -n hwameistor get pod\nNAME                                                       READY   STATUS                  RESTARTS   AGE\nhwameistor-local-disk-csi-controller-665bb7f47d-6227f      2/2     Running                 0          30s\nhwameistor-local-disk-manager-5ph2d                        2/2     Running                 0          30s\nhwameistor-local-disk-manager-jhj59                        2/2     Running                 0          30s\nhwameistor-local-disk-manager-k9cvj                        2/2     Running                 0          30s\nhwameistor-local-disk-manager-kxwww                        2/2     Running                 0          30s\nhwameistor-local-storage-csi-controller-667d949fbb-k488w   3/3     Running                 0          30s\nhwameistor-local-storage-csqqv                             2/2     Running                 0          30s\nhwameistor-local-storage-gcrzm                             2/2     Running                 0          30s\nhwameistor-local-storage-v8g7t                             2/2     Running                 0          30s\nhwameistor-local-storage-zkwmn                             2/2     Running                 0          30s\nhwameistor-scheduler-58dfcf79f5-lswkt                      1/1     Running                 0          30s\nhwameistor-webhook-986479678-278cr                         1/1     Running                 0          30s\n")),(0,t.kt)("admonition",{type:"info"},(0,t.kt)("p",{parentName:"admonition"},(0,t.kt)("inlineCode",{parentName:"p"},"local-disk-manager")," and ",(0,t.kt)("inlineCode",{parentName:"p"},"local-storage")," are ",(0,t.kt)("inlineCode",{parentName:"p"},"DaemonSets"),". They should have one pod on each Kubernetes node.")),(0,t.kt)("h2",{id:"step-2-check-the-apis"},"Step 2: Check the APIs"),(0,t.kt)("p",null,"HwameiStor CRDs create the following APIs."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl api-resources --api-group hwameistor.io\nNAME                       SHORTNAMES   APIVERSION               NAMESPACED   KIND\nlocaldiskclaims            ldc          hwameistor.io/v1alpha1   false        LocalDiskClaim\nlocaldisknodes             ldn          hwameistor.io/v1alpha1   false        LocalDiskNode\nlocaldisks                 ld           hwameistor.io/v1alpha1   false        LocalDisk\nlocaldiskvolumes           ldv          hwameistor.io/v1alpha1   false        LocalDiskVolume\nlocalstoragenodes          lsn          hwameistor.io/v1alpha1   false        LocalStorageNode\nlocalvolumeconverts        lvconvert    hwameistor.io/v1alpha1   true         LocalVolumeConvert\nlocalvolumeexpands         lvexpand     hwameistor.io/v1alpha1   false        LocalVolumeExpand\nlocalvolumegroupconverts   lvgconvert   hwameistor.io/v1alpha1   true         LocalVolumeGroupConvert\nlocalvolumegroupmigrates   lvgmigrate   hwameistor.io/v1alpha1   true         LocalVolumeGroupMigrate\nlocalvolumegroups          lvg          hwameistor.io/v1alpha1   true         LocalVolumeGroup\nlocalvolumemigrates        lvmigrate    hwameistor.io/v1alpha1   true         LocalVolumeMigrate\nlocalvolumereplicas        lvr          hwameistor.io/v1alpha1   false        LocalVolumeReplica\nlocalvolumes               lv           hwameistor.io/v1alpha1   false        LocalVolume\n")),(0,t.kt)("p",null,"For the details about CRDs, please also refer to the chapter ",(0,t.kt)("a",{parentName:"p",href:"/docs/modules/crd"},"CRDs"),"."),(0,t.kt)("h1",{id:"step-3-check-the-localdisknode-and-localdisks"},"Step 3: Check the localDiskNode and localDisks"),(0,t.kt)("p",null,"HwameiStor autoscans each node and registers each disk as CRD ",(0,t.kt)("inlineCode",{parentName:"p"},"localDisk(ld)"),". The unused disks are displayed with ",(0,t.kt)("inlineCode",{parentName:"p"},"PHASE: Unclaimed"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get localdisknodes\nNAME           TOTALDISK   FREEDISK\nk8s-master-1   5           3\nk8s-worker-1   5           2\nk8s-worker-2   5           2\nk8s-worker-3   5           2\n\n$ kubectl get localdisks\nNAME               NODEMATCH      CLAIM   PHASE\nk8s-master-1-sda   k8s-master-1           Inuse\nk8s-master-1-sdb   k8s-master-1           Inuse\nk8s-master-1-sdc   k8s-master-1           Unclaimed\nk8s-master-1-sdd   k8s-master-1           Unclaimed\nk8s-master-1-sde   k8s-master-1           Unclaimed\nk8s-worker-1-sda   k8s-worker-1           Inuse\nk8s-worker-1-sdb   k8s-worker-1           Unclaimed\nk8s-worker-1-sdc   k8s-worker-1           Unclaimed\nk8s-worker-1-sdd   k8s-worker-1           Inuse\nk8s-worker-1-sde   k8s-worker-1           Inuse\nk8s-worker-2-sda   k8s-worker-2           Inuse\nk8s-worker-2-sdb   k8s-worker-2           Unclaimed\nk8s-worker-2-sdc   k8s-worker-2           Unclaimed\nk8s-worker-2-sdd   k8s-worker-2           Inuse\nk8s-worker-2-sde   k8s-worker-2           Inuse\nk8s-worker-3-sda   k8s-worker-3           Inuse\nk8s-worker-3-sdb   k8s-worker-3           Unclaimed\nk8s-worker-3-sdc   k8s-worker-3           Unclaimed\nk8s-worker-3-sdd   k8s-worker-3           Inuse\nk8s-worker-3-sde   k8s-worker-3           Inuse\n")))}d.isMDXComponent=!0}}]);