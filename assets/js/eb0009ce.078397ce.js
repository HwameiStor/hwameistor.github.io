"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1173],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=c(a),m=i,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return a?n.createElement(h,s(s({ref:t},d),{},{components:a})):n.createElement(h,s({ref:t},d))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,s=new Array(o);s[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:i,s[1]=r;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1555:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var n=a(7462),i=(a(7294),a(3905));const o={sidebar_position:6,sidebar_label:"LVM"},s="LVM",r={unversionedId:"terms/lvm",id:"terms/lvm",title:"LVM",description:"The full name of LVM is Logical Volume Manager. It adds a logical layer between",source:"@site/docs/terms/lvm.md",sourceDirName:"terms",slug:"/terms/lvm",permalink:"/docs/terms/lvm",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/terms/lvm.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_label:"LVM"},sidebar:"tutorialSidebar",previous:{title:"Volume",permalink:"/docs/terms/volume"},next:{title:"PV and PVC",permalink:"/docs/terms/pv_pvc"}},l={},c=[{value:"Basic functionality",id:"basic-functionality",level:2},{value:"Advantages",id:"advantages",level:2},{value:"Basic procedure to use LVM",id:"basic-procedure-to-use-lvm",level:2},{value:"LV expansion",id:"lv-expansion",level:2},{value:"VG expansion",id:"vg-expansion",level:2},{value:"LV snapshots",id:"lv-snapshots",level:2}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lvm"},"LVM"),(0,i.kt)("p",null,"The full name of LVM is Logical Volume Manager. It adds a logical layer between\nthe disk partition and the file system, provides an abstract disk volume for the\nfile system to shield the underlying disk partition layout, and establishes a file\nsystem on the disk volume."),(0,i.kt)("p",null,"With LVM, you can dynamically resize file systems without repartitioning the disk,\nand file systems managed with LVM can span disks. When a new disk is added to the\nserver, the administrator does not have to move the original files to the new disk,\nbut directly extends the file system across the disk through LVM. That is, by\nencapsulating the underlying physical hard disk, and then presenting it to the\nupper-level application in the form of a logical volume."),(0,i.kt)("p",null,"LVM encapsulates the underlying hard disk. When we operate the underlying physical\nhard disk, we no longer operate on the partition, but perform the underlying disk\nmanagement operation on it through something called a logical volume."),(0,i.kt)("h2",{id:"basic-functionality"},"Basic functionality"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Physical media (PM):")," LVM storage media can be partitions, disks, RAID arrays, or SAN disks.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Physical volume (PV):")," Physical volume is the basic storage logical block of LVM,\nbut compared with basic physical storage media (such as partitions, disks, etc.),\nit contains management parameters related to LVM. A physical volume can be partitioned\nby a disk, or it can be the disk itself. Disks must be initialized as LVM physical\nvolumes to be used with LVM.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Volume groups (VG):")," It can be resized online by absorbing new physical volumes (PVs)\nor ejecting existing ones.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Logical volumes (LV):")," It can be resized online by concatenating extents onto them or\ntruncating extents from them.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Physical extents (PE):")," The smallest storage unit that can be allocated in the physical volume.\nThe size of PE can be specified, and the default is 4MB.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Logical extents (LE):")," The smallest storage unit that can be allocated in an logical volume.\nIn the same volume group, the size of LE is the same as that of PE, and there is a one-to-one correspondence."))),(0,i.kt)("h2",{id:"advantages"},"Advantages"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use volume groups to make multiple hard drives look like one big hard drive"),(0,i.kt)("li",{parentName:"ul"},"Using logical volumes, partitions can span multiple hard disk spaces sdb1 sdb2 sdc1 sdd2 sdf"),(0,i.kt)("li",{parentName:"ul"},"Using logical volumes, you can dynamically resize it if the storage space is insufficient"),(0,i.kt)("li",{parentName:"ul"},"When resizing a logical volume, you need not to consider the location of the logical volume\non a hard disk, and you need not to worry about no contiguous space available"),(0,i.kt)("li",{parentName:"ul"},"LV and VG can be created, deleted, and resized online, and the file system on LVM also needs to be resized"),(0,i.kt)("li",{parentName:"ul"},"You can create snapshots, which can be used to back up file systems"),(0,i.kt)("li",{parentName:"ul"},"RAID + LVM combined: LVM is a software method of volume management, while RAID is a method of\ndisk management. For important data, RAID is used to protect physical disks from failures and\nservices are not interrupted, and LVM is used to achieve a good volume management and better\nuse of disk resources.")),(0,i.kt)("h2",{id:"basic-procedure-to-use-lvm"},"Basic procedure to use LVM"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Format a physical disk as PVs, that is, the space is divided into PEs. A PV contains multiple PEs."),(0,i.kt)("li",{parentName:"ol"},"Add different PVs to the same VG, that is, the PEs of different PVs all enter the PE pool of the VG.\nA VG contains multiple PVs."),(0,i.kt)("li",{parentName:"ol"},"Create logical volumes in the VG. This creation process is based on PE, so the PEs that make up the LV\nmay come from different physical disks. LV is created based on PE."),(0,i.kt)("li",{parentName:"ol"},"Directly format the LV and mount it for use."),(0,i.kt)("li",{parentName:"ol"},"The scaling in / out of an LV is actually to increase or decrease the number of PEs that make up the LV\nwithout losing the original data."),(0,i.kt)("li",{parentName:"ol"},"Format the LV and mount it for use.")),(0,i.kt)("h2",{id:"lv-expansion"},"LV expansion"),(0,i.kt)("p",null,"First, determine if there is available space for expansion, because space is created\nfrom VG, and LVs cannot be expanded across VGs. If the VG has no capacity, you need to\nexpand the VG first. Perform the following steps:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ vgs\nVG #PV #LV #SN Attr VSize VFree\nvg-sdb1 1 8 1 wz--n- <16.00g <5.39g\n$ lvextend -L +100M  -r /dev/vg-sdb1/lv-sdb1     #\u5c06 /dev/vg-sdb1/lv-sdb \u6269\u5bb9 100M\n")),(0,i.kt)("h2",{id:"vg-expansion"},"VG expansion"),(0,i.kt)("p",null,"If there is not sufficient space in the VG and you need to add a new disk, run the following commands in sequence:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pvcreate /dev/sdc\nvgextend vg-sdb1 /dev/sdb3\n")),(0,i.kt)("h2",{id:"lv-snapshots"},"LV snapshots"),(0,i.kt)("p",null,"The LVM mechanism provides the function of snapshotting LVs to obtain a state-consistent\nbackup of the file system. LVM adopts Copy-On-Write (COW) technology, which can be backed\nup without stopping the service or setting the logical volume as read-only. Using the LVM,\nsnapshot function can enable consistent backup without affecting the availability of the server."),(0,i.kt)("p",null,"The copy-on-write adopted by LVM means that when creating an LVM snapshot, only the metadata\nin the original volume is copied. In other words, when an LVM logical volume is created,\nno physical replication of the data occurs. In another words, only the metadata is copied,\nnot the physical data, so the snapshot creation is almost real-time. When a write operation\nis performed on the original volume, the snapshot will track the changes to the blocks in\nthe original volume. At this time, the data that will be changed on the original volume\nwill be copied to the space reserved by the snapshot before the change."))}p.isMDXComponent=!0}}]);