"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1859],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>p});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=s(r),p=n,m=h["".concat(c,".").concat(p)]||h[p]||d[p]||l;return r?o.createElement(m,a(a({ref:t},u),{},{components:r})):o.createElement(m,a({ref:t},u))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var s=2;s<l;s++)a[s]=r[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},2337:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var o=r(7462),n=(r(7294),r(3905));const l={sidebar_position:4,sidebar_label:"Scheduler"},a="Scheduler",i={unversionedId:"architecture_of_hwameistor/3.2.modules/3.2.4.scheduler",id:"architecture_of_hwameistor/3.2.modules/3.2.4.scheduler",title:"Scheduler",description:"The Scheduler is used to automatically schedule the Pod to a correct node which is associated with HwameiStor volume. With the scheduler, the Pod does not need the NodeAffinity or NodeSelector field to select the node. A scheduler will work for both LVM and Disk volumes.",source:"@site/docs/3.architecture_of_hwameistor/3.2.modules/3.2.4.scheduler.md",sourceDirName:"3.architecture_of_hwameistor/3.2.modules",slug:"/architecture_of_hwameistor/3.2.modules/3.2.4.scheduler",permalink:"/docs/architecture_of_hwameistor/3.2.modules/3.2.4.scheduler",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/3.architecture_of_hwameistor/3.2.modules/3.2.4.scheduler.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Scheduler"},sidebar:"tutorialSidebar",previous:{title:"DRBD Installer",permalink:"/docs/architecture_of_hwameistor/3.2.modules/3.2.3.drbd_installer"},next:{title:"Admission Controller",permalink:"/docs/architecture_of_hwameistor/3.2.modules/3.2.5.admission_controller"}},c={},s=[],u={toc:s};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"scheduler"},"Scheduler"),(0,n.kt)("p",null,"The Scheduler is used to automatically schedule the Pod to a correct node which is associated with HwameiStor volume. With the scheduler, the Pod does not need the NodeAffinity or NodeSelector field to select the node. A scheduler will work for both LVM and Disk volumes."),(0,n.kt)("p",null,"The Scheduler should be deployed with the HA mode in the cluster, which is a best practice for production."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Install by Helm Chart")),(0,n.kt)("p",null,"Scheduler must work with Local Storage and Local Disk Manager. It's suggested to install by ",(0,n.kt)("a",{parentName:"p",href:"/docs/quick_start/2.1.installation/2.1.2.deploy_helm_charts"},"Helm Chart"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Install by YAML (for developing)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f deploy/scheduler.yaml\n")))}d.isMDXComponent=!0}}]);