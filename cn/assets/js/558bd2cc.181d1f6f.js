"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5169],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1156:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2,sidebar_label:"Use Disk Volume"},i="Use Disk Volume",s={unversionedId:"apps/disk",id:"apps/disk",title:"Use Disk Volume",description:"HwameiStor provides another type of data volume known as raw disk data volume.",source:"@site/docs/apps/disk.md",sourceDirName:"apps",slug:"/apps/disk",permalink:"/cn/docs/apps/disk",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/edit/main/docs/docs/apps/disk.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Use Disk Volume"},sidebar:"tutorialSidebar",previous:{title:"LVM Volume",permalink:"/cn/docs/apps/lvm"},next:{title:"HA Volumes",permalink:"/cn/docs/apps/ha"}},l={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-disk-volume"},"Use Disk Volume"),(0,a.kt)("p",null,"HwameiStor provides another type of data volume known as raw disk data volume.\nThis volume is based on the raw disk present on the node and can be directly mounted for container use.\nAs a result, this type of data volume offers more efficient data read and write performance,\nthereby fully unleashing the performance of the disk."),(0,a.kt)("p",null,"Create a nginx application and use ",(0,a.kt)("inlineCode",{parentName:"p"},"hwameistor-disk-volume")," volume using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ cat << EOF | kubectl apply -f -\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  namespace: default\nspec:\n  containers:\n  - name: nginx\n    image: docker.io/library/nginx:latest\n    imagePullPolicy: IfNotPresent\n    volumeMounts:\n    - name: data\n      mountPath: /data\n    ports:\n    - containerPort: 80\n  volumes:\n  - name: data\n    persistentVolumeClaim:\n      claimName: hwameistor-disk-volume\nEOF\n")))}u.isMDXComponent=!0}}]);