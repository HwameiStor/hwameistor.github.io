"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8058],{3905:(e,r,a)=>{a.d(r,{Zo:()=>d,kt:()=>u});var t=a(7294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function l(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=t.createContext({}),c=function(e){var r=t.useContext(i),a=r;return e&&(a="function"==typeof e?e(r):s(s({},r),e)),a},d=function(e){var r=c(e.components);return t.createElement(i.Provider,{value:r},e.children)},k={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(a),u=n,m=p["".concat(i,".").concat(u)]||p[u]||k[u]||o;return a?t.createElement(m,s(s({ref:r},d),{},{components:a})):t.createElement(m,s({ref:r},d))}));function u(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=p;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=a[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},3149:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=a(7462),n=(a(7294),a(3905));const o={sidebar_position:3,sidebar_label:"\u5b89\u88c5\u540e\u68c0\u67e5"},s="\u5b89\u88c5\u540e\u68c0\u67e5",l={unversionedId:"installation/post-deploy",id:"installation/post-deploy",title:"\u5b89\u88c5\u540e\u68c0\u67e5",description:"The below example is from a 4-node kubernetes cluster:",source:"@site/i18n/cn/docusaurus-plugin-content-docs/current/01.installation/02.post-deploy.md",sourceDirName:"01.installation",slug:"/installation/post-deploy",permalink:"/cn/docs/installation/post-deploy",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/01.installation/02.post-deploy.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"\u5b89\u88c5\u540e\u68c0\u67e5"},sidebar:"tutorialSidebar",previous:{title:"\u901a\u8fc7 Helm Chart \u90e8\u7f72",permalink:"/cn/docs/installation/deploy"},next:{title:"\u5347\u7ea7",permalink:"/cn/docs/installation/upgrade"}},i={},c=[{value:"Step 1: Check the pods",id:"step-1-check-the-pods",level:2},{value:"Step 2: Check the storageclass",id:"step-2-check-the-storageclass",level:2},{value:"Step 3: Check the APIs",id:"step-3-check-the-apis",level:2}],d={toc:c};function k(e){let{components:r,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},d,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"\u5b89\u88c5\u540e\u68c0\u67e5"},"\u5b89\u88c5\u540e\u68c0\u67e5"),(0,n.kt)("p",null,"The below example is from a 4-node kubernetes cluster:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get no\nNAME           STATUS   ROLES   AGE   VERSION\nk8s-master-1   Ready    master  82d   v1.24.3-2+63243a96d1c393\nk8s-worker-1   Ready    worker  36d   v1.24.3-2+63243a96d1c393\nk8s-worker-2   Ready    worker  59d   v1.24.3-2+63243a96d1c393\nk8s-worker-3   Ready    worker  36d   v1.24.3-2+63243a96d1c393\n")),(0,n.kt)("h2",{id:"step-1-check-the-pods"},"Step 1: Check the pods"),(0,n.kt)("p",null,"The following pods should be up and running:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl -n hwameistor get pod\nNAME                                                       READY   STATUS                  RESTARTS   AGE\nhwameistor-local-disk-csi-controller-665bb7f47d-6227f      2/2     Running                 0          30s\nhwameistor-local-disk-manager-5ph2d                        2/2     Running                 0          30s\nhwameistor-local-disk-manager-jhj59                        2/2     Running                 0          30s\nhwameistor-local-disk-manager-k9cvj                        2/2     Running                 0          30s\nhwameistor-local-disk-manager-kxwww                        2/2     Running                 0          30s\nhwameistor-local-storage-csi-controller-667d949fbb-k488w   3/3     Running                 0          30s\nhwameistor-local-storage-csqqv                             2/2     Running                 0          30s\nhwameistor-local-storage-gcrzm                             2/2     Running                 0          30s\nhwameistor-local-storage-v8g7t                             2/2     Running                 0          30s\nhwameistor-local-storage-zkwmn                             2/2     Running                 0          30s\nhwameistor-scheduler-58dfcf79f5-lswkt                      1/1     Running                 0          30s\nhwameistor-webhook-986479678-278cr                         1/1     Running                 0          30s\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"local-disk-manager")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"local-storage")," are ",(0,n.kt)("inlineCode",{parentName:"p"},"DaemonSets"),". They should have one pod on each Kubernetes node.")),(0,n.kt)("h2",{id:"step-2-check-the-storageclass"},"Step 2: Check the storageclass"),(0,n.kt)("p",null,"A ",(0,n.kt)("inlineCode",{parentName:"p"},"storageClass")," should be created:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get storageclass hwameistor-storage-disk-hdd\nNAME                          PROVISIONER          RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\nhwameistor-storage-disk-hdd   disk.hwameistor.io   Delete          WaitForFirstConsumer   true                   4m29s\n")),(0,n.kt)("h2",{id:"step-3-check-the-apis"},"Step 3: Check the APIs"),(0,n.kt)("p",null,"HwameiStor CRDs create the following APIs."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl api-resources --api-group hwameistor.io\nNAME                       SHORTNAMES   APIVERSION               NAMESPACED   KIND\nlocaldiskclaims            ldc          hwameistor.io/v1alpha1   false        LocalDiskClaim\nlocaldisknodes             ldn          hwameistor.io/v1alpha1   false        LocalDiskNode\nlocaldisks                 ld           hwameistor.io/v1alpha1   false        LocalDisk\nlocaldiskvolumes           ldv          hwameistor.io/v1alpha1   false        LocalDiskVolume\nlocalstoragenodes          lsn          hwameistor.io/v1alpha1   false        LocalStorageNode\nlocalvolumeconverts        lvconvert    hwameistor.io/v1alpha1   true         LocalVolumeConvert\nlocalvolumeexpands         lvexpand     hwameistor.io/v1alpha1   false        LocalVolumeExpand\nlocalvolumegroupconverts   lvgconvert   hwameistor.io/v1alpha1   true         LocalVolumeGroupConvert\nlocalvolumegroupmigrates   lvgmigrate   hwameistor.io/v1alpha1   true         LocalVolumeGroupMigrate\nlocalvolumegroups          lvg          hwameistor.io/v1alpha1   true         LocalVolumeGroup\nlocalvolumemigrates        lvmigrate    hwameistor.io/v1alpha1   true         LocalVolumeMigrate\nlocalvolumereplicas        lvr          hwameistor.io/v1alpha1   false        LocalVolumeReplica\nlocalvolumes               lv           hwameistor.io/v1alpha1   false        LocalVolume\n")),(0,n.kt)("p",null,"For the details about CRDs, please also refer to the chapter ",(0,n.kt)("a",{parentName:"p",href:"/cn/docs/components/crd"},"CRDs"),"."),(0,n.kt)("h1",{id:"step-4-check-the-localdisknode-and-localdisks"},"Step 4: Check the localDiskNode and localDisks"),(0,n.kt)("p",null,"HwameiStor autoscans each node and registers each disk as CRD ",(0,n.kt)("inlineCode",{parentName:"p"},"localDisk(ld)"),". The unused disks are displayed with ",(0,n.kt)("inlineCode",{parentName:"p"},"PHASE: Unclaimed"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get localdisknodes\nNAME           TOTALDISK   FREEDISK\nk8s-master-1   5           3\nk8s-worker-1   5           2\nk8s-worker-2   5           2\nk8s-worker-3   5           2\n\n$ kubectl get localdisks\nNAME               NODEMATCH      CLAIM   PHASE\nk8s-master-1-sda   k8s-master-1           Inuse\nk8s-master-1-sdb   k8s-master-1           Inuse\nk8s-master-1-sdc   k8s-master-1           Unclaimed\nk8s-master-1-sdd   k8s-master-1           Unclaimed\nk8s-master-1-sde   k8s-master-1           Unclaimed\nk8s-worker-1-sda   k8s-worker-1           Inuse\nk8s-worker-1-sdb   k8s-worker-1           Unclaimed\nk8s-worker-1-sdc   k8s-worker-1           Unclaimed\nk8s-worker-1-sdd   k8s-worker-1           Inuse\nk8s-worker-1-sde   k8s-worker-1           Inuse\nk8s-worker-2-sda   k8s-worker-2           Inuse\nk8s-worker-2-sdb   k8s-worker-2           Unclaimed\nk8s-worker-2-sdc   k8s-worker-2           Unclaimed\nk8s-worker-2-sdd   k8s-worker-2           Inuse\nk8s-worker-2-sde   k8s-worker-2           Inuse\nk8s-worker-3-sda   k8s-worker-3           Inuse\nk8s-worker-3-sdb   k8s-worker-3           Unclaimed\nk8s-worker-3-sdc   k8s-worker-3           Unclaimed\nk8s-worker-3-sdd   k8s-worker-3           Inuse\nk8s-worker-3-sde   k8s-worker-3           Inuse\n")))}k.isMDXComponent=!0}}]);