"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4423],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,h=u["".concat(s,".").concat(d)]||u[d]||c[d]||o;return r?a.createElement(h,i(i({ref:t},m),{},{components:r})):a.createElement(h,i({ref:t},m))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7392:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2,sidebar_label:"\u4f7f\u7528 Helm Chart \u90e8\u7f72"},i="\u4f7f\u7528 Helm Chart \u90e8\u7f72",l={unversionedId:"quick_start/2.1.installation/2.1.2.deploy_helm_charts",id:"quick_start/2.1.installation/2.1.2.deploy_helm_charts",title:"\u4f7f\u7528 Helm Chart \u90e8\u7f72",description:"The entire HwameiStor stack can be easily deployed by Helm Charts.",source:"@site/i18n/cn/docusaurus-plugin-content-docs/current/2.quick_start/2.1.installation/2.1.2.deploy_helm_charts.md",sourceDirName:"2.quick_start/2.1.installation",slug:"/quick_start/2.1.installation/2.1.2.deploy_helm_charts",permalink:"/cn/docs/quick_start/2.1.installation/2.1.2.deploy_helm_charts",draft:!1,editUrl:"https://github.com/hwameistor/hwameistor/docs/2.quick_start/2.1.installation/2.1.2.deploy_helm_charts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"\u4f7f\u7528 Helm Chart \u90e8\u7f72"},sidebar:"tutorialSidebar",previous:{title:"\u51c6\u5907\u5de5\u4f5c",permalink:"/cn/docs/quick_start/2.1.installation/2.1.1.prerequisites"},next:{title:"\u5b89\u88c5\u540e\u68c0\u67e5",permalink:"/cn/docs/quick_start/2.1.installation/2.1.3.post_deployment_inspect"}},s={},p=[{value:"Step 1: Prepare helm tool",id:"step-1-prepare-helm-tool",level:2},{value:"Step 2: Deploy HwameiStor",id:"step-2-deploy-hwameistor",level:2},{value:"Use image repository mirrors",id:"use-image-repository-mirrors",level:2},{value:"Customize kubelet root directory",id:"customize-kubelet-root-directory",level:2},{value:"Production setup",id:"production-setup",level:2}],m={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"\u4f7f\u7528-helm-chart-\u90e8\u7f72"},"\u4f7f\u7528 Helm Chart \u90e8\u7f72"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"The entire HwameiStor stack can be easily deployed by Helm Charts.")),(0,n.kt)("h2",{id:"step-1-prepare-helm-tool"},"Step 1: Prepare helm tool"),(0,n.kt)("p",null,"To install ",(0,n.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm")," commandline tool, please refer to ",(0,n.kt)("a",{parentName:"p",href:"https://helm.sh/docs/"},"Helm's Documentation"),"."),(0,n.kt)("h2",{id:"step-2-deploy-hwameistor"},"Step 2: Deploy HwameiStor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/hwameistor/helm-charts.git\n\n$ cd hwameistor\n\n$ helm install \\\n    --namespace hwameistor \\\n    --create-namespace \\\n    hwameistor \\\n    helm/hwameistor \\\n")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"That's it!")),(0,n.kt)("p",null,"To verify the deployment, please refer to the next chapter ",(0,n.kt)("a",{parentName:"p",href:"/cn/docs/quick_start/2.1.installation/2.1.3.post_deployment_inspect"},"Post Deployment")),(0,n.kt)("h2",{id:"use-image-repository-mirrors"},"Use image repository mirrors"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"The default image repositories are ",(0,n.kt)("inlineCode",{parentName:"p"},"quay.io")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"ghcr.io"),".\nIn case they are blocked in some places, DaoCloud provides their mirrors at ",(0,n.kt)("inlineCode",{parentName:"p"},"quay.m.daocloud.io")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"ghcr.m.daocloud.io"))),(0,n.kt)("p",null,"To switch image repository mirrors, use ",(0,n.kt)("inlineCode",{parentName:"p"},"--set")," to change the value of parameters: ",(0,n.kt)("inlineCode",{parentName:"p"},"k8sImageRegistry")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"hwameistorImageRegistry")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm install \\\n    --namespace hwameistor \\\n    --create-namespace \\\n    hwameistor \\\n    helm/hwameistor \\\n    --set k8sImageRegistry=quay.m.daocloud.io \\\n    --set hwameistorImageRegistry=ghcr.m.daocloud.io\n")),(0,n.kt)("h2",{id:"customize-kubelet-root-directory"},"Customize kubelet root directory"),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"The default ",(0,n.kt)("inlineCode",{parentName:"p"},"kubelet")," directory is ",(0,n.kt)("inlineCode",{parentName:"p"},"/var/lib/kubelet"),".\nIf your Kubernetes distribution uses a different ",(0,n.kt)("inlineCode",{parentName:"p"},"kubelet")," directory, you must set the parameter ",(0,n.kt)("inlineCode",{parentName:"p"},"kubeletRootDir"),".")),(0,n.kt)("p",null,"For example, on ",(0,n.kt)("a",{parentName:"p",href:"https://microk8s.io/"},"Canonical's MicroK8s")," which uses ",(0,n.kt)("inlineCode",{parentName:"p"},"/var/snap/microk8s/common/var/lib/kubelet/")," as ",(0,n.kt)("inlineCode",{parentName:"p"},"kubelet")," directory,  HwameiStor needs to be deployed as:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm install \\\n    --namespace hwameistor \\\n    --create-namespace \\\n    hwameistor \\\n    helm/hwameistor \\\n    --set kubeletRootDir=/var/snap/microk8s/common/var/lib/kubelet/\n")),(0,n.kt)("h2",{id:"production-setup"},"Production setup"),(0,n.kt)("p",null,"A production environment would require:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"specify resource configuration"),(0,n.kt)("li",{parentName:"ul"},"avoid deploying on master nodes"),(0,n.kt)("li",{parentName:"ul"},"implement quick failover of controllers")),(0,n.kt)("p",null,"We provide some recommended values in ",(0,n.kt)("inlineCode",{parentName:"p"},"values.extra.prod.yaml"),", to use it:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm install \\\n    --namespace hwameistor \\\n    --create-namespace \\\n    hwameistor \\\n    helm/hwameistor \\\n    -f helm/hwameistor/values.yaml \\\n    -f helm/hwameistor/values.extra.prod.yaml\n")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"In a resource-strained test environment, setting above-mentioned values would cause pods unable to start!")))}c.isMDXComponent=!0}}]);